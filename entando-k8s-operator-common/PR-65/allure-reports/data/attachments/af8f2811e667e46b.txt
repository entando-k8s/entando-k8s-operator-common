---
replicas: 1
ingressHostName: "myhost.com"
customResource:
  apiVersion: "test.org/v1"
  kind: "TestResource"
  metadata:
    name: "my-app2"
    namespace: "my-namespace2"
  isCustomResource: true
secrets: []
tlsSecretName: "test-tls-secret"
ssoClientConfig:
  realm: "my-realm"
  clientId: "my-client"
  clientName: "my-client"
  roles: []
  permissions: []
  redirectUri: []
  webOrigins: []
ingressNamespace: "my-namespace"
mixins:
- "Deployable"
- "PublicIngressingDeployable"
- "SsoAwareDeployable"
- "Secretive"
- "IngressingDeployable"
defaultServiceAccountName: "default"
ingressRequired: true
ssoConnectionInfo:
  baseUrlToUse: "http://default-keycloak-sso-in-namespace-service.my-namespace2.svc.cluster.local:8080/auth"
  defaultRealm: "my-realm"
  mixins:
  - "SsoConnectionInfo"
  password: "password123"
  externalBaseUrl: "https://mykeycloak.com/auth"
  internalBaseUrl: "http://default-keycloak-sso-in-namespace-service.my-namespace2.svc.cluster.local:8080/auth"
  adminSecret:
    apiVersion: "v1"
    kind: "Secret"
    metadata:
      name: "default-keycloak-sso-in-namespace-admin-secret"
      namespace: "my-namespace2"
    stringData:
      username: "jon"
      password: "password123"
  username: "jon"
ingressName: "my-app-ingress"
containers:
- ssoVariables:
  - name: "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI"
    value: "https://mykeycloak.com/auth/realms/my-realm"
  - name: "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET"
    valueFrom:
      secretKeyRef:
        key: "clientSecret"
        name: "my-client-secret"
        optional: false
  - name: "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID"
    valueFrom:
      secretKeyRef:
        key: "clientId"
        name: "my-client-secret"
        optional: false
  memoryLimitMebibytes: 256
  dockerImageInfo:
    organization: "test"
    repository: "my-image"
    tag: "6.3.2"
  namesOfSecretsToMount: []
  additionalPorts: []
  trustStoreVariables:
  - name: "JAVA_TOOL_OPTIONS"
    valueFrom:
      secretKeyRef:
        key: "TRUSTSTORE_SETTINGS"
        name: "entando-default-truststore"
        optional: false
  primaryPort: 8081
  webContextPath: "/my-app2"
  mixins:
  - "TrustStoreAwareContainer"
  - "IngressingPathOnPort"
  - "IngressingContainer"
  - "ServiceBackingContainer"
  - "DeployableContainer"
  - "SsoAwareContainer"
  - "HasWebContext"
  healthCheckPath: "/my-app2/health"
  kubernetesPermissions: []
  environmentVariables: []
  nameQualifier: "server"
  secretsToMount: []
  cpuLimitMillicores: 500
  portForIngressPath: 8081
serviceAccountToUse: "default"
